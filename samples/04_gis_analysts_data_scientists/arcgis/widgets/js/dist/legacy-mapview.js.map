{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/legacy-mapview.js","webpack:///external \"@jupyter-widgets/base\"","webpack:///./src/arcgis-map-ipywidget/loaders/requirejs-esri-loader.ts","webpack:///./node_modules/esri-loader/dist/umd/esri-loader.js","webpack:///./src/config/notebook.js","webpack:///./src/config/common.js","webpack:///./src/config/configure-cdn.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","esriLoader","widgets","requireJSEsriLoader","defaultEsriLoader","config","console","log","JupyterTarget","options","EsriLoaderOptions","LegacyMapView","DOMWidgetView","extend","render","loadModules","then","esriConfig","catch","err","not_used","$","addClass","that","this","token_info","model","trim","token","JSON","parse","defaults","io","corsEnabledServers","push","server","serverInfo","ServerInfo","tokenServiceUrl","tokenurl","IdentityManager","registerServers","userId","username","password","generateToken","response","registerToken","expires","ssl","load_map","IPython","keyboard_manager","disable","bms","length","bmdefs","esriBasemaps","baseMapLayers","title","id","arcgis_url","arcgisUtils","arcgisUrl","createMap","el","enable","map","disableKeyboardNavigation","toolbar","Draw","on","onDrawEnd","onMouseClick","mode_changed","basemap_changed","layer_changed","start_time_changed","end_time_changed","indexOf","ext","newExtent","Extent","xmin","xmax","ymin","ymax","spatialReference","SpatialReference","wkid","Map","basemap","extent","center","reverse","zoom","on_load","evt","disableMapNavigation","enableMapNavigation","onExtentChange","zoomed","levelChange","extent_change","evtObj","geometry","graphic","graphics","add","Graphic","SimpleFillSymbol","deactivate","draw_end","syncGraphic","symbol","_current_js_dg_list","_current_js_dg_list2","set","stringify","touch","event","mouse_clicked","mapPoint","zoom_changed","extent_changed","center_changed","gallerybasemaps_changed","remove_layer","setZoom","clear","removeAllLayers","drawgraphic","gfx","type","SimpleLineSymbol","STYLE_SOLID","dojo","Color","polySymbol","setOutline","setColor","PictureMarkerSymbol","nbextensionPath","shape","activate","createTemplate","layer","fieldInfos","array","fields","field","alias","PopupTemplate","curbasemap","getBasemap","newlayer","window","location","protocol","url","startsWith","replace","kml","KMLLayer","addLayer","domStyle","tl","ArcGISTiledMapServiceLayer","dmsl","ArcGISDynamicMapServiceLayer","vtl","VectorTileLayer","FeatureLayer","lyr_options","opacity","setOpacity","definition_expression","setDefinitionExpression","renderer","heatmapRenderer","HeatmapRenderer","setRenderer","field_name","hmoptions","setTimeout","createClassedSizeRenderer","createClassedColorRenderer","jsonUtils","fromJson","default_properties","classificationMethod","renderer_properties","assign","smartMapping","redraw","bRend","bSRend","lang","hitch","_layerDict","normalization","refreshInterval","toJson","declaredClass","_current_list","_current_list2","setInfoTemplate","createSizeRenderer","swipelayer","imgsvc_options","imageServiceParameters","params","ImageServiceParameters","renderingRule","rasterFunction","RasterFunction","mosaicRule","MosaicRule","bandIds","ArcGISImageServiceLayer","LayerSwipe","layers","startup","MODE_SNAPSHOT","newlyr_options","layerIdToRemove","layerToRemove","getLayer","removeLayer","centerAt","setExtent","start_time","timeExtent","TimeExtent","startTime","Date","endTime","setTimeExtent","end_time","setBasemap","basemapChangeHandle","remove","returnList","basemapLayerIds","current_basemap_layer","_title","resourceInfo","documentInfo","Title","_basemap_dict","send","message","events","_handle_click","__WEBPACK_EXTERNAL_MODULE__1__","link","document","querySelector","getCss","createElement","rel","href","createStylesheetLink","head","appendChild","isBrowser","DEFAULT_URL","handleScriptLoad","script","callback","errback","onScriptError","e","error","Error","src","removeEventListener","addEventListener","handleScriptError","onScriptLoad","utils","Promise","resolve","reject","getScript","getAttribute","isLoaded","css","loadCss","requirejsConfig","setAttribute","createScript","body","loadScriptOptions","require","args","requireModules","undefined","setRequireJSConfig","loadScript","DEFAULT_VERSION","parseVersion","version","match","major","parseInt","minor","getCdnUrl","getCssUrl","urlOrVersion","baseUrl","parsedVersion","getCdnCssUrl","before","beforeNode","parentNode","insertBefore","insertLink","globalRequire","insertCssBefore","dojoConfig","errorHandler","_i","arguments","factory","configureCdn","jupyterBase","test","pathname","BaseRequireJSConfig","has","geotext","useXhr","openXhr","onXhr","xhr","hasCors","XMLHttpRequest","open","proxyUrl","CdnUrl","CdnMainCssUrl","minJSAPIVersion","cdn","packages","main","customRequire","scriptEl","removeChild"],"mappings":"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","file":"legacy-mapview.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var widgets = require('@jupyter-widgets/base');\nvar requireJSEsriLoader = require(\"./arcgis-map-ipywidget/loaders/requirejs-esri-loader\");\nvar defaultEsriLoader = require(\"esri-loader\");\nvar config = require(\"config\")\n\nconsole.log(\"Loading arcgis-map-ipywidget...\");\n\nvar esriLoader;\nif(!config.JupyterTarget){\n    throw \"config does not specify 'JupyterTarget'! Failing\";\n} else if(config.JupyterTarget === \"lab\"){\n    console.log(\"Using the default esri-loader...\");\n    esriLoader = defaultEsriLoader;\n} else if(config.JupyterTarget === \"notebook\") {\n    //Jupyter Notebooks use RequireJS for AMD module loading\n    //We must use the custom requireJSesri-loader for it to work\n    //See ./requirejs-esri-loader.js for more details\n    console.log(\"Using the custom RequireJS esri-loader...\");\n    esriLoader = requireJSEsriLoader;\n} else{\n    throw \"Misconfigured config file! Failing\";\n}\n\nconsole.log(\"Config loaded:\");\nconsole.log(config);\n\nvar options = config.EsriLoaderOptions;\n\nvar LegacyMapView = widgets.DOMWidgetView.extend({\n        // var layerList = new Array(),\n        // Render the view.\n        render: function () {\n            console.log(\"starting to render..\");\n            esriLoader.loadModules(['esri/config'], options).then(([esriConfig]) => {\n              console.log(esriConfig);\n            }).catch((err) => { console.log(\"Caught an error!\"); console.log(err);});\n        },\n\n        not_used: function() {\n//            esriLoader.loadModules(['esri/config'], options).then(([esriConfig]) => {\n//            $('head').append($('<link rel=\"stylesheet\" type=\"text/css\" />').attr('href', nbextensionPath + '/custom.css'));\n            $('body').addClass('claro');\n            var that = this;\n\n            var token_info = this.model.get('_token_info')\n            if ((token_info) && (token_info.trim() != '')) {\n\n                var token = JSON.parse(token_info);\n\n                esriConfig.defaults.io.corsEnabledServers.push(token.server);\n\n                var serverInfo = new ServerInfo();\n                serverInfo.server = token.server;\n                serverInfo.tokenServiceUrl = token.tokenurl;\n\n\n                IdentityManager.registerServers([serverInfo]);\n\n\n                var userId = token.username;\n                var password = token.password;\n\n\n                // https://geonet.esri.com/thread/119062\n                IdentityManager.generateToken(serverInfo, {\n                    username: userId,\n                    password: password\n                }).then(function (response) {\n                    IdentityManager.registerToken({\n                        server: serverInfo.server,\n                        userId: userId,\n                        token: response.token,\n                        expires: response.expires,\n                        ssl: response.ssl\n                    });\n                }).then(function (response) {\n\n                    load_map(that);\n\n                });\n\n\n            } else {\n\n                load_map(that);\n            }\n\n            function load_map(that) {\n                IPython.keyboard_manager.disable(); // loading map can cause modal dialog for secure resources which is\n                // incompatible with keyboard manager (eats shortcut keys)\n\n                // This was introduced to handle situations where basemap is changed to a custom\n                //   basemap before the map is actually loaded/drawn.  It seemed that in this situation,\n                //   the model event isn't being trigged properly here in the JS code.\n                //   If _gallerybasemaps has already been initialized, push items onto esriBasemaps object.\n                var bms = that.model.get('_gallerybasemaps');\n                if (bms.length > 0) {\n                    var bmdefs = that.model.get('_gbasemaps_def');\n                    for (var i=0;i < bms.length;i++) {\n                        esriBasemaps[bms[i]] = {\n                            baseMapLayers: bmdefs[i],\n                            title: bms[i]\n                        };\n                    }\n                }\n\n                var id = that.model.get('id');\n                if ((id) && (id.trim() != '')) {\n                    var arcgis_url = that.model.get('_arcgis_url');\n                    if ((arcgis_url) && (arcgis_url.trim() != '')) {\n                        arcgisUtils.arcgisUrl = arcgis_url;\n                    }\n                    arcgisUtils.createMap(id, that.el).then(function (response) {\n                        IPython.keyboard_manager.enable();\n                        that.map = response.map;\n                        that.map.disableKeyboardNavigation(); // interferes with the Notebook keyboard shortcuts\n                        // create the draw toolbar, it activates only when mode=draw_*\n                        that.toolbar = new Draw(that.map);\n                        // hook up events\n                        that.toolbar.on(\"draw-end\", onDrawEnd);\n                        //map.on(\"extent-change\", onExtentChange);\n                        that.map.on(\"click\", onMouseClick);\n\n                        that.mode_changed();\n                        that.basemap_changed();\n                        that.layer_changed();\n                        that.start_time_changed();\n                        that.end_time_changed();\n                    });\n                } else {\n\n                    //that.$el.append(\"<div id='\"+that.model.get('_swipe_div')+\"'>\");\n\n                    if (that.model.get('_extent').indexOf(\"{\") > -1) {\n                        var ext = JSON.parse(that.model.get('_extent'));\n\n                        var newExtent = new Extent();\n                        newExtent.xmin = ext.xmin;\n                        newExtent.xmax = ext.xmax;\n                        newExtent.ymin = ext.ymin;\n                        newExtent.ymax = ext.ymax;\n\n                        newExtent.spatialReference = new SpatialReference({ wkid: 4326 });\n\n                        that.map = new Map(that.el, {\n                            basemap: that.model.get('_basemap'),\n                            extent: newExtent\n                        });\n\n\n                    } else {\n\n                        that.map = new Map(that.el, {\n                            basemap: that.model.get('_basemap'),\n                            center: that.model.get('center').reverse(),\n                            zoom: that.model.get('zoom')\n                        });\n                    }\n\n                    that.map.on(\"load\", on_load);\n                }\n            }\n\n            function on_load(evt) {\n                console.log('***on_load');\n                IPython.keyboard_manager.enable();\n                evt.map.disableKeyboardNavigation(); // interferes with the Notebook keyboard shortcuts\n                // Disable navigation by default, so scrolling the page doesn't scroll the map\n                evt.map.disableMapNavigation();\n                // When the user tries to pan the map, allow this\n                evt.map.on('mouse-drag-start', function(){\n                   evt.map.enableMapNavigation();\n                });\n\n                // Restore the no-scroll behaviour when the mouse leaves the map\n                evt.map.on('mouse-out', function(){\n                   evt.map.disableMapNavigation();\n                });\n                // create the draw toolbar, it activates only when mode=draw_*\n                that.toolbar = new Draw(evt.map);\n                // hook up events\n                that.toolbar.on(\"draw-end\", onDrawEnd);\n                evt.map.on(\"extent-change\", onExtentChange);\n                evt.map.on(\"click\", onMouseClick);\n\n\n                that.mode_changed();\n                that.basemap_changed();\n                that.layer_changed();\n                that.start_time_changed();\n                that.end_time_changed();\n\n                // amani - sync the initial extent\n                // that.model.set('_jsextent', JSON.stringify(that.map.extent));\n                // that.model.touch();\n            }\n\n\n            // JS map events\n\n            function onExtentChange(evt){\n                //console.log('#####EXTENTCHANGE')\n              var extent = evt.extent,\n                  zoomed = evt.levelChange;\n                that.extent_change(extent, zoomed);\n            }\n\n            function onDrawEnd(evtObj) {\n                var geometry = evtObj.geometry;\n\n                var graphic = that.map.graphics.add(new Graphic(geometry, new SimpleFillSymbol()));\n\n                that.toolbar.deactivate();\n                that.draw_end(geometry);\n\n                //amani- Add all interactive graphics to web map at the end. Save them all to a list of dicts\n                var syncGraphic = {'geometry':geometry, 'symbol':graphic.symbol};\n\n                var _current_js_dg_list = that.model.get('_js_interactive_drawn_graphic');\n                if (_current_js_dg_list == \"\"){\n                    _current_js_dg_list2 = [];\n                }\n                else{\n                    _current_js_dg_list2 = JSON.parse(_current_js_dg_list);\n                }\n                _current_js_dg_list2.push(syncGraphic);\n                that.model.set('_js_interactive_drawn_graphic', JSON.stringify(_current_js_dg_list2));\n                that.touch();\n            }\n\n            function onMouseClick(event) {\n                that.map.enableMapNavigation();\n                //console.log(\"User clicked at \" + event.screenPoint.x + \", \" + event.screenPoint.y +\n                //            \" on the screen. The map coordinate at this point is \" +\n                //            event.mapPoint.x + \", \" + event.mapPoint.y\n                //);\n                //console.log(\"MapCpoint:\"+JSON.stringify(event.mapPoint));\n                //var normalizedVal = webMercatorUtils.xyToLngLat(event.mapPoint.x, event.mapPoint.y);\n                //console.log(normalizedVal);\n                that.mouse_clicked(event.mapPoint);//normalizedVal[0], normalizedVal[1]);\n            }\n\n\n            // Model change events\n            this.model.on('change:zoom', this.zoom_changed, this);\n            this.model.on('change:mode', this.mode_changed, this);\n            this.model.on('change:_extent', this.extent_changed, this);\n            this.model.on('change:center', this.center_changed, this);\n            this.model.on('change:_basemap', this.basemap_changed, this);\n            this.model.on('change:_gallerybasemaps', this.gallerybasemaps_changed, this);\n            this.model.on('change:_addlayer', this.layer_changed, this);\n            this.model.on('change:start_time', this.start_time_changed, this);\n            this.model.on('change:end_time', this.end_time_changed, this);\n            this.model.on('change:_layerId_to_remove', this.remove_layer, this);\n//        }).catch((err) => {console.log(\"Caught an error!\"); console.log(err)});\n    },\n        /*\n        on_load: function(evt) {\n            console.log('***on_load');\n            evt.map.disableKeyboardNavigation(); // interferes with the Notebook keyboard shortcuts\n            // create the draw toolbar, it activates only when mode=draw_*\n            this.toolbar = new Draw(evt.map);\n            // hook up events\n            this.toolbar.on(\"draw-end\", this.onDrawEnd);\n            //map.on(\"extent-change\", onExtentChange);\n            //evt.map.target.on(\"click\", this.onMouseClick);\n            evt.map.on(\"click\", this.onMouseClick);\n        },\n        onDrawEnd : function(evtObj){\n            var geometry = evtObj.geometry;\n            var graphic = this.map.graphics.add(new Graphic(geometry, new SimpleFillSymbol()));\n            this.toolbar.deactivate();\n            //this.draw_end(geometry);\n                        this.model.set('mode','navigate');\n            this.touch();\n            this.send({event: 'draw-end', message: geometry});\n        },\n        onMouseClick: function(event) {\n            console.log(\"User clicked at \" +  event.screenPoint.x + \", \" + event.screenPoint.y +\n                        \" on the screen. The map coordinate at this point is \" +\n                        event.mapPoint.x + \", \" + event.mapPoint.y\n            );\n            //console.log(\"MapCpoint:\"+JSON.stringify(event.mapPoint));\n            //var normalizedVal = webMercatorUtils.xyToLngLat(event.mapPoint.x, event.mapPoint.y);\n            //console.log(normalizedVal);\n            //this.mouse_clicked(event.mapPoint);//normalizedVal[0], normalizedVal[1]);\n            this.send({event: 'mouseclick', message: event.mapPoint});//'{ \\'x\\':' + mapx + ', \\'y\\':' + mapy + '}'});\n        },\n        */\n        // Incoming Events from the model\n        zoom_changed: function () {\n            this.map.setZoom(this.model.get('zoom'));\n        },\n\n        mode_changed: function () {\n\n            if (this.model.get('mode') == \"navigate\") {\n                console.log(\"***mode = navigate\")\n                this.toolbar.deactivate();\n            } else if (this.model.get('mode') == \"###clear_graphics\") {\n                this.map.graphics.clear();\n                this.model.set('_js_interactive_drawn_graphic', \"\");\n            } else if (this.model.get('mode') == \"###remove_layers\") {\n                this.map.removeAllLayers();\n            } else if (this.model.get('mode').indexOf(\"{\") > -1) {\n\n                console.log(\"***mode=draw_geometry***\");\n                var drawgraphic = JSON.parse(this.model.get('mode'));\n                var gfx = new Graphic(drawgraphic);\n\n                if (gfx.symbol == null) {\n                    if (gfx.geometry.type === 'polyline') {\n                        console.log(\"GEOM TYPE POLYLINE\");\n\n                        gfx.symbol = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new dojo.Color([255, 0, 0, 0.5]), 3);\n                    } else if (gfx.geometry.type === 'polygon') {\n                        console.log(\"GEOM TYPE POLYGON***\");\n\n                        var polySymbol = new SimpleFillSymbol();\n                        polySymbol.setOutline(new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new dojo.Color([0, 0, 0, 0.5]), 1));\n                        polySymbol.setColor(new Color([255, 127, 0, 0.7]));\n\n                        gfx.symbol = polySymbol;\n                    } else if (gfx.geometry.type === 'point') {\n                        console.log(\"GEOM TYPE POINT\");\n\n                        gfx.symbol = new PictureMarkerSymbol(nbextensionPath + '/icons/pink.png', 32, 32);\n                    } else if (gfx.geometry.type === 'multipoint') {\n                        console.log(\"GEOM TYPE MULTIPOINT\");\n\n                        gfx.symbol = new PictureMarkerSymbol(nbextensionPath + '/icons/pink.png', 32, 32);\n                    }\n                }\n                this.map.graphics.add(gfx);\n\n            } else {\n                var shape = this.model.get('mode');\n                console.log(\"***mode=draw_\" + shape);\n                this.toolbar.activate(shape);\n            }\n        },\n        createTemplate: function (layer) {\n            var fieldInfos = array.map(layer.fields, function (field) {\n                return {\n                    \"fieldName\": field.name,\n                    \"label\": field.alias,\n                    \"visible\": true\n                }\n            });\n\n            var template = new PopupTemplate({\n                title: layer.name,\n                fieldInfos: fieldInfos\n            });\n            return template;\n        },\n\n        layer_changed: function () {\n            var that = this;\n            var curbasemap = that.map.getBasemap();\n            var bmgallery = this.model.get('_gallerybasemaps');\n            // If using a custom basemap, smart mapping doesn't\n            // support that so default to JSAPI topo instead.\n            if (bmgallery.indexOf(curbasemap) >= 0) {\n                curbasemap = 'topo';\n            }\n            if (this.model.get('_addlayer').indexOf(\"{\") > -1) {\n\n                console.log(\"***###***addlayer\");\n\n                var newlayer = JSON.parse(this.model.get('_addlayer'));\n                if ((window.location.protocol === 'https:') && (newlayer.url.startsWith('http:'))) {\n                    newlayer.url = newlayer.url.replace(\"http://\",\"https://\")\n                }\n                console.log(newlayer);\n                if (newlayer.type == \"KMLLayer\") {\n                    console.log(\"KMLLayer \" + newlayer.url);\n                    var kml = new KMLLayer(newlayer.url);\n                    this.map.addLayer(kml);\n                    kml.on(\"load\", function () {\n                        domStyle.set(\"loading\", \"display\", \"none\");\n                    });\n                }\n                else if (newlayer.type == \"ArcGISTiledMapServiceLayer\") {\n                    var tl = new ArcGISTiledMapServiceLayer(newlayer.url);\n                    this.map.addLayer(tl);\n                }\n                else if (newlayer.type == \"ArcGISDynamicMapServiceLayer\") {\n                    var dmsl = new ArcGISDynamicMapServiceLayer(newlayer.url);\n                    this.map.addLayer(dmsl);\n                }\n                else if (newlayer.type == \"VectorTileLayer\") {\n                    var vtl = new VectorTileLayer(newlayer.url);\n                    this.map.addLayer(vtl);\n                }\n                else if ((newlayer.type == \"FeatureLayer\") || (newlayer.type == \"Feature Layer\")) {\n                    console.log(\"Adding FeatureLayer \" + newlayer.url);\n\n                    var layer = new FeatureLayer(newlayer.url, {\n                        \"outFields\": [\"*\"]\n                    });\n\n                    if (newlayer.options != null) {\n                        var lyr_options = JSON.parse(newlayer.options);\n                        if (lyr_options.opacity != null) {\n                            console.log('***opacity:' + lyr_options.opacity);\n                            layer.setOpacity(lyr_options.opacity);\n                        }\n\n                        if (lyr_options.definition_expression != null) {\n                            console.log(\"***DEF EXP\");\n                            console.log(lyr_options.definition_expression);\n                            layer.setDefinitionExpression(lyr_options.definition_expression);\n                        }\n\n                        if (lyr_options.renderer == \"HeatmapRenderer\") {\n                            var heatmapRenderer = new HeatmapRenderer();\n                            layer.setRenderer(heatmapRenderer);\n                        }\n\n                        console.log(\"ClassedSizeRend0:\" + lyr_options.renderer);\n                        console.log(\"ClassedSizeRend:\" + lyr_options.field_name);\n\n                        if (lyr_options.renderer == \"HeatmapRenderer\") {\n                            var heatmapRenderer = new HeatmapRenderer();\n                            var hmoptions = {};\n\n                            if (lyr_options.field_name != null) {\n                                hmoptions = {\n                                    field: lyr_options.field_name,\n                                };\n                            }\n                            var heatmapRenderer = new HeatmapRenderer(hmoptions);\n\n                            layer.setRenderer(heatmapRenderer);\n\n                            //amani - this code is now redundant\n                            // hm_renderer_string = JSON.stringify({\"type\":\"heatmap\",\n                            //                                     \"colorStops\":heatmapRenderer.colorStops,\n                            //                                     \"blurRadius\":heatmapRenderer.blurRadius,\n                            //                                     \"field\":heatmapRenderer.field,\n                            //                                     \"maxPixelIntensity\":heatmapRenderer.maxPixelIntensity,\n                            //                                     \"minPixelIntensity\":heatmapRenderer.minPixelIntensity})\n                            // this.model.set('_js_renderer', hm_renderer_string);\n                            // this.touch();\n                        }\n\n                        else if (lyr_options.renderer == \"ClassedSizeRenderer\") {\n                            console.log(\"ClassedSizeRenderer...\");\n                            setTimeout(function () { createClassedSizeRenderer(lyr_options); }, 500);\n                            /*layer.on(\"load\", function () {\n                                console.log(\"AAA\");\n                                 createClassedSizeRenderer(lyr_options.field_name);\n                             });*/\n                        }\n\n                        else if (lyr_options.renderer == \"ClassedColorRenderer\") {\n                            setTimeout(function () { createClassedColorRenderer(lyr_options); }, 500);\n                            /*layer.on(\"load\", function () {\n                                console.log(\"BBB\");\n                                 createClassedColorRenderer(lyr_options.field_name);\n                             });\n                             */\n                        }\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tvar renderer = jsonUtils.fromJson(lyr_options.renderer); \n\t\t\t\t\t\t\tlayer.setRenderer(renderer);\n\t\t\t\t\t\t}\n\n                        function createClassedColorRenderer(lyr_options) {\n                            //smart mapping functionality begins\n                            var default_properties = {\n                                layer: layer,\n                                field: lyr_options.field_name,\n                                basemap: curbasemap,\n                                classificationMethod: \"quantile\"\n                            };\n\n                            var renderer_properties = Object.assign(default_properties, lyr_options);\n\n                            console.log(renderer_properties);\n\n                            smartMapping.createClassedColorRenderer(renderer_properties).then(function (response) {\n                                layer.setRenderer(response.renderer);\n\n                                layer.redraw();\n                                console.log(response.renderer);\n                                //createLegend(map, layer, field);\n                            });\n                        }\n\n\n                        function createClassedSizeRenderer(lyr_options) {\n                            console.log(\"ClassedSizeRend2\");\n                            //smart mapping functionality begins\n                            var default_properties = {\n                                layer: layer,\n                                field: lyr_options.field_name,\n                                basemap: curbasemap,\n                                classificationMethod: \"quantile\"\n                            };\n\n                            var renderer_properties = Object.assign(default_properties, lyr_options);\n\n                            console.log(renderer_properties);\n\n                            smartMapping.createClassedSizeRenderer(renderer_properties).then(function (response) {\n                                layer.setRenderer(response.renderer);\n                                layer.redraw();\n                                //createLegend(map, layer, field);\n                            });\n                        }\n                    }\n\n                    if (newlayer.opacity != null) {\n                        layer.setOpacity(newlayer.opacity);\n                    }\n\n                    if (newlayer.definition_expression != null) {\n                        console.log(\"***DEF EXP\");\n                        console.log(newlayer.definition_expression);\n                        layer.setDefinitionExpression(newlayer.definition_expression);\n                    }\n\n                    if (newlayer.renderer == \"HeatmapRenderer\") {\n                        var heatmapRenderer = new HeatmapRenderer();\n                        layer.setRenderer(heatmapRenderer);\n                    }\n\n                    bRend = false;\n                    bSRend = false;\n\n                    this.map.addLayer(layer);\n\n                    if (newlayer.renderer == \"ClassedColorRenderer\") {\n                        bRend = true;\n                        //layer.on(\"load\", function () {\n                        //  createRenderer(newlayer.field_name);\n                        //});\n                    }\n\n                    if (newlayer.renderer == \"ClassedSizeRenderer\") {\n                        bSRend = true;\n                        //layer.on(\"load\", function () {\n                        //  createSizeRenderer(newlayer.field_name);\n                        //});\n                    }\n\n                    //amani - sync the layer info after layer loads - smartMapping is asyc\n                    layer.on(\"load\", lang.hitch(this, function(){\n\n                        //add the current layer to layer list and sync with Python side.\n                        //cannot stringify layers. So create a layer dict\n                        var _layerDict = {'id':layer.id,\n                                            'normalization':layer.normalization,\n                                            'refreshInterval':layer.refreshInterval,\n                                            'url':layer.url};\n                        if (layer.renderer){\n                            _layerDict['renderer'] = layer.renderer.toJson();\n                            _layerDict['rendererType']=layer.renderer.declaredClass;\n                        }\n\n                        // Simply maintain the list of layers as a list in the synced property. Read it and extend this list\n                        var _current_list = this.model.get('_js_layer_list');\n                        if (_current_list == \"\"){\n                            var _current_list2 = [];\n                        }\n                        else{\n                            var _current_list2 = JSON.parse(_current_list);\n                        }\n\n                        _current_list2.push(_layerDict);\n                        this.model.set('_js_layer_list', JSON.stringify(_current_list2));\n                        this.touch();\n                    }));\n\n                    //amani - sync the layer info when renderer is changed due to smart mapping\n                    layer.on(\"renderer-change\", lang.hitch(this, function(){\n                        if (typeof(lyr_options)!=typeof(undefined)) {\n                            if ('renderer' in lyr_options) {\n                                if ((lyr_options.renderer == 'ClassedColorRenderer') ||\n                                    (lyr_options.renderer == \"ClassedSizeRenderer\")) {\n\n                                    var _current_list = this.model.get('_js_layer_list');\n                                    if (_current_list != \"\") {\n                                        console.log(\"Update renderer of latest layer\");\n                                        var _current_list2 = JSON.parse(_current_list);\n                                        _current_list2[_current_list2.length - 1]['renderer'] = layer.renderer.toJson();\n                                        _current_list2[_current_list2.length - 1]['rendererType'] = layer.renderer.declaredClass;\n\n                                        this.model.set('_js_layer_list', JSON.stringify(_current_list2));\n                                        this.touch();\n                                        console.log(\"CCR, CSR renderer updated\");\n                                    }\n                                }\n                            }\n                            else {\n                                console.log(\"Fired due to some other event\");\n                            }\n                        }else{console.log(\"Not sure which fired renderer-change\");}\n\n                        // //add the current layer to layer list and sync with Python side.\n                        // //cannot stringify layers. So create a layer dict\n                        // var _layerDict = {'id':layer.id,\n                        //                     'normalization':layer.normalization,\n                        //                     'refreshInterval':layer.refreshInterval,\n                        //                     'url':layer.url};\n                        // if (layer.renderer){\n                        //     _layerDict['renderer'] = layer.renderer.toJson();\n                        //     _layerDict['rendererType']=layer.renderer.declaredClass;\n                        // }\n                        //\n                        // // Simply maintain the list of layers as a list in the synced property. Read it and extend this list\n                        // var _current_list = this.model.get('_js_layer_list');\n                        // if (_current_list == \"\"){\n                        //     var _current_list2 = [];\n                        // }\n                        // else{\n                        //     var _current_list2 = JSON.parse(_current_list);\n                        // }\n                        //\n                        // _current_list2.push(_layerDict);\n                        // this.model.set('_js_layer_list', JSON.stringify(_current_list2));\n                        // this.touch();\n                    }));\n\n                    layer.on(\"load\", lang.hitch(this, function () {\n                        layer.setInfoTemplate(this.createTemplate(layer));\n                        if (bRend) {\n                            createRenderer(newlayer.field_name);\n                        }\n                        if (bSRend) {\n                            createSizeRenderer(newlayer.field_name);\n                        }\n                    }));\n                    function createRenderer(field) {\n                        //smart mapping functionality begins\n                        smartMapping.createClassedColorRenderer({\n                            layer: layer,\n                            field: field,\n                            basemap: curbasemap,\n                            classificationMethod: \"quantile\"\n                        }).then(function (response) {\n                            layer.setRenderer(response.renderer);\n                            layer.redraw();\n                            //createLegend(map, layer, field);\n                        });\n                    }\n\n                    function createSizeRenderer(field) {\n                        console.log(\"ClassedSizeRend2\");\n                        //smart mapping functionality begins\n                        smartMapping.createClassedSizeRenderer({\n                            layer: layer,\n                            field: field,\n                            basemap: curbasemap,\n                            classificationMethod: \"quantile\"\n                        }).then(function (response) {\n                            layer.setRenderer(response.renderer);\n                            layer.redraw();\n                            //createLegend(map, layer, field);\n                        });\n                    }\n                }\n                else if (newlayer.type == \"ImageryLayer\") {\n\n                    console.log(\"ArcGISImageServiceLayer \" + newlayer.url);\n                    var options = {};\n                    var swipelayer = false;\n                    var opacity = -1;\n                    if (newlayer.options != null) {\n                        var imgsvc_options = JSON.parse(newlayer.options);\n\n                        if (imgsvc_options.opacity) {\n                            opacity = imgsvc_options.opacity;\n                        }\n\n                        if (imgsvc_options.swipelayer) {\n                            swipelayer = imgsvc_options.swipelayer;\n                        }\n                        if (imgsvc_options.imageServiceParameters) {\n                            var params = new ImageServiceParameters();\n\n                            if (imgsvc_options.imageServiceParameters.renderingRule) {\n                                var rasterFunction = new RasterFunction(imgsvc_options.imageServiceParameters.renderingRule);\n                                params.renderingRule = rasterFunction;\n                            }\n                            if (imgsvc_options.imageServiceParameters.mosaicRule) {\n                                var mosaicRule = new MosaicRule(imgsvc_options.imageServiceParameters.mosaicRule);\n                                params.mosaicRule = mosaicRule;\n                            }\n                            if (imgsvc_options.imageServiceParameters.bandIds) {\n                                params.bandIds = imgsvc_options.imageServiceParameters.bandIds;\n                            }\n\n                            options.imageServiceParameters = params;\n                        }\n                    }\n                    var layer = new ArcGISImageServiceLayer(newlayer.url, options);\n\n                    if (opacity != -1) {\n                        console.log(\"******Setting opacity \");\n                        layer.setOpacity(opacity);\n                    }\n\n                    this.map.addLayer(layer);\n\n                    if (swipelayer) {\n                        console.log(\"Swipe Layer\");\n                        var swipeWidget = new LayerSwipe({\n                            type: \"vertical\",  //Try switching to \"scope\" or \"horizontal\"\n                            map: map,\n                            layers: [layer]\n                        }, this.model.get('_swipe_div'));\n                        swipeWidget.startup();\n                    }\n\n                    //amani - sync the layer info after layer loads - Imagery Layers\n                    layer.on(\"load\", lang.hitch(this, function(){\n\n                        //add the current layer to layer list and sync with Python side.\n                        //cannot stringify layers. So create a layer dict\n                        var _layerDict = {'id':layer.id,\n                                            'bandIds':layer.bandIds,\n                                            'mosaicRule':layer.mosaicRule,\n                                            'url':layer.url,\n                                            'renderingRule':layer.renderingRule};\n                        if (layer.renderer){\n                            _layerDict['renderer'] = layer.renderer;\n                            _layerDict['rendererType']=layer.renderer.declaredClass;\n                        }\n\n                        // Simply maintain the list of layers as a list in the synced property. Read it and extend this list\n                        var _current_list = this.model.get('_js_layer_list');\n                        if (_current_list == \"\"){\n                            var _current_list2 = [];\n                        }\n                        else{\n                            var _current_list2 = JSON.parse(_current_list);\n                        }\n\n                        _current_list2.push(_layerDict);\n                        this.model.set('_js_layer_list', JSON.stringify(_current_list2));\n                        this.touch();\n                    }));\n                }\n                else { // Feature Collection\n\n                    // console.log(newlayer);\n\n                    var options = { mode: FeatureLayer.MODE_SNAPSHOT };\n                    var newlyr_options = {};\n                    if (newlayer.options != null) {\n                        newlyr_options = Object.assign(options, JSON.parse(newlayer.options));\n                    }\n\n                    console.log(\"***Feature Collection layer###***\");\n                    console.log(\"inspecting if feature collection contains layers\");\n                    if ('layers' in newlayer){\n                        newlayer = newlayer.layers[0];\n                    }\n                    var layer = new FeatureLayer(newlayer, newlyr_options);\n                    //code added by MM to add pop up to a FC\n\n                    layer.setInfoTemplate(this.createTemplate(layer));\n\n                    //end changes from mm\n\n                    if (newlayer.options != null) {\n                        var lyr_options = JSON.parse(newlayer.options);\n\n\n                        console.log(\"ClassedSizeRend0:\" + lyr_options.renderer);\n                        console.log(\"ClassedSizeRend:\" + lyr_options.field_name);\n\n                        if (lyr_options.renderer == \"HeatmapRenderer\") {\n                            var heatmapRenderer = new HeatmapRenderer();\n                            var hmoptions = {};\n\n                            if (lyr_options.field_name != null) {\n                                hmoptions = {\n                                    field: lyr_options.field_name,\n                                };\n                            }\n                            var heatmapRenderer = new HeatmapRenderer(hmoptions);\n\n                            layer.setRenderer(heatmapRenderer);\n                        }\n\n\n                        if (lyr_options.renderer == \"ClassedSizeRenderer\") {\n                            console.log(\"ClassedSizeRenderer...\");\n                            setTimeout(function () { createClassedSizeRenderer(lyr_options.field_name); }, 500);\n                            /*layer.on(\"load\", function () {\n                                console.log(\"AAA\");\n                                 createClassedSizeRenderer(lyr_options.field_name);\n                             });*/\n                        }\n\n                        if (lyr_options.renderer == \"ClassedColorRenderer\") {\n                            setTimeout(function () { createClassedColorRenderer(lyr_options.field_name); }, 500);\n                            /*layer.on(\"load\", function () {\n                                console.log(\"BBB\");\n                                 createClassedColorRenderer(lyr_options.field_name);\n                             });\n                             */\n                        }\n\n                        function createClassedColorRenderer(field) {\n                            //smart mapping functionality begins\n                            smartMapping.createClassedColorRenderer({\n                                layer: layer,\n                                field: field,\n                                basemap: curbasemap,\n                                classificationMethod: \"quantile\"\n                            }).then(function (response) {\n                                layer.setRenderer(response.renderer);\n                                layer.redraw();\n                                //createLegend(map, layer, field);\n                            });\n                        }\n\n\n                        function createClassedSizeRenderer(field) {\n                            console.log(\"ClassedSizeRend2\");\n                            //smart mapping functionality begins\n                            smartMapping.createClassedSizeRenderer({\n                                layer: layer,\n                                field: field,\n                                basemap: curbasemap,\n                                classificationMethod: \"quantile\"\n                            }).then(function (response) {\n                                layer.setRenderer(response.renderer);\n                                layer.redraw();\n                                //createLegend(map, layer, field);\n                            });\n                        }\n                    }\n\n\n                    this.map.addLayer(layer);\n                    console.log(\"added the fc layer\");\n                    //amani - sync the layer info after layer loads - smartMapping is asyc\n                    var _layerDict = {'id':layer.id,\n                                            'normalization':layer.normalization,\n                                            'refreshInterval':layer.refreshInterval,\n                                            'url':layer.url};\n                    if (layer.renderer){\n                        _layerDict['renderer'] = layer.renderer;\n                        _layerDict['rendererType']=layer.renderer.declaredClass;\n                    }\n\n                    // Simply maintain the list of layers as a list in the synced property. Read it and extend this list\n                    var _current_list = this.model.get('_js_layer_list');\n                    if (_current_list == \"\"){\n                        var _current_list2 = [];\n                    }\n                    else{\n                        var _current_list2 = JSON.parse(_current_list);\n                    }\n\n                    _current_list2.push(_layerDict);\n                    this.model.set('_js_layer_list', JSON.stringify(_current_list2));\n                    this.touch();\n                }\n\n            }\n        },\n\n        remove_layer: function(){\n            var that = this;\n            var layerIdToRemove = this.model.get('_layerId_to_remove');\n            var layerToRemove = this.map.getLayer(layerIdToRemove);\n            console.log(\"*** removing individual layer ***\");\n            this.map.removeLayer(layerToRemove);\n\n            //must update the _js_layer_list trait - happens in Python side.\n        },\n\n        center_changed: function () {\n            console.log(\"changing center\");\n            this.map.centerAt(this.model.get('center').reverse());\n        },\n\n        extent_changed: function () {\n            console.log(\"changing extent@@@@@\");\n\n            var ext = JSON.parse(this.model.get('_extent'));\n\n            var newExtent = new Extent();\n            newExtent.xmin = ext.xmin;\n            newExtent.xmax = ext.xmax;\n            newExtent.ymin = ext.ymin;\n            newExtent.ymax = ext.ymax;\n\n            newExtent.spatialReference = new SpatialReference({ wkid: 4326 });\n\n            this.map.setExtent(newExtent);\n        },\n\n        start_time_changed: function () {\n            var start_time = this.model.get('start_time')\n            if ((start_time) && (start_time.trim() != '')) {\n                console.log(\"changing start_time\");\n                var timeExtent = new TimeExtent();\n                timeExtent.startTime = new Date(this.model.get('start_time'));\n                timeExtent.endTime = new Date(this.model.get('end_time'));\n                this.map.setTimeExtent(timeExtent);\n            }\n        },\n\n        end_time_changed: function () {\n            var end_time = this.model.get('end_time')\n            if ((end_time) && (end_time.trim() != '')) {\n                console.log(\"changing end_time\");\n                var timeExtent = new TimeExtent();\n                timeExtent.startTime = new Date(this.model.get('start_time'));\n                timeExtent.endTime = new Date(this.model.get('end_time'));\n                this.map.setTimeExtent(timeExtent);\n            }\n        },\n\n        basemap_changed: function () {\n            this.map.setBasemap(this.model.get('_basemap'));\n            var basemapChangeHandle = this.map.on(\"basemap-change\", lang.hitch(this, function(){\n                basemapChangeHandle.remove();\n                var returnList = [];\n                for (var i=0; i<this.map.basemapLayerIds.length; i++)\n                {\n                    var current_basemap_layer = this.map.getLayer(this.map.basemapLayerIds[i]);\n                    try{\n                        var resource_info = JSON.parse(current_basemap_layer.resourceInfo);\n                        var _title = resource_info.documentInfo.Title;\n                    }\n                    catch(err){\n                        var _title = this.model.get('_basemap');\n                    }\n\n                    var _basemap_dict = {'url':current_basemap_layer.url,\n                                        'title':_title};\n                    returnList.push(_basemap_dict);\n                }\n\n                this.model.set('_js_basemap', JSON.stringify(returnList));\n                this.touch();\n            }))\n            // var current_basemap_layer = this.map.getLayer(this.map.basemapLayerIds[0]);\n            // console.log(current_basemap_layer);\n            // var basemap_dict = {'url':current_basemap_layer.url}\n            // this.model.set('_js_basemap', current_basemap_layer.url);\n            // this.touch();\n\n        },\n\n\t    gallerybasemaps_changed: function () {\n            console.log(\"**Using Basemaps Gallery....\");\n            var bms = this.model.get('_gallerybasemaps');\n            // If the gallery_basemaps is not empty, then we must be using a group\n            if (bms.length > 0) {\n                var bmdefs = this.model.get('_gbasemaps_def');\n                for (var i=0;i < bms.length;i++) {\n                    esriBasemaps[bms[i]] = {\n                        baseMapLayers: bmdefs[i],\n                        title: bms[i]\n                    };\n                }\n            }\n        },\n\n        // Outgoing events to the model\n\n        mouse_clicked: function (geometry) { //mapx, mapy) {\n            this.send({ event: 'mouseclick', message: geometry });//'{ \\'x\\':' + mapx + ', \\'y\\':' + mapy + '}'});\n        },\n\n        draw_end: function (geometry) {\n            this.model.set('mode', 'navigate');\n            this.touch();\n            this.send({ event: 'draw-end', message: geometry });\n        },\n\n        extent_change: function(extent, zoomed) {\n            //console.log(JSON.stringify(extent));\n            //console.log(zoomed);\n            this.model.set('_jsextent', JSON.stringify(extent));\n            this.touch();\n        },\n\n\n        events: {\n            // Dictionary of events and their handlers.\n            'click': '_handle_click',\n        },\n\n        _handle_click: function () {\n            /**\n             * Handles when the button is clicked.\n             */\n            this.send({ event: 'click', message: 'xyz' });\n        },\n\n    });\n\nmodule.exports = {\n    LegacyMapView: LegacyMapView \n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/*\n  Copyright 2017 Esri\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\nvar activeRequireConfig = null;\n\nexport function loadCss(url) {\n  let link = getCss(url);\n  if (!link) {\n    // create & load the css library\n    link = createStylesheetLink(url);\n    document.head.appendChild(link);\n  }\n  return link;\n}\n\nfunction createStylesheetLink(url) {\n  const link = document.createElement('link');\n  link.rel = 'stylesheet';\n  link.href = url;\n  return link;\n}\n\n// TODO: export this function?\n// check if the css url has been injected or added manually\nfunction getCss(url) {\n  return document.querySelector(`link[href*=\"${url}\"]`) as HTMLLinkElement;\n}\n\nconst isBrowser = typeof window !== 'undefined';\nconst DEFAULT_URL = 'https://js.arcgis.com/4.7/';\n// this is the url that is currently being, or already has loaded\nlet _currentUrl;\n\nfunction createScript(url) {\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = url;\n  script.setAttribute('data-esri-loader', 'loading');\n  return script;\n}\n\n// add a one-time load handler to script\n// and optionally add a one time error handler as well\nfunction handleScriptLoad(script, callback, errback?) {\n  let onScriptError;\n  if (errback) {\n    // set up an error handler as well\n    onScriptError = handleScriptError(script, errback);\n  }\n  const onScriptLoad = () => {\n    // pass the script to the callback\n    callback(script);\n    // remove this event listener\n    script.removeEventListener('load', onScriptLoad, false);\n    if (onScriptError) {\n      // remove the error listener as well\n      script.removeEventListener('error', onScriptError, false);\n    }\n  };\n  script.addEventListener('load', onScriptLoad, false);\n}\n\n// add a one-time error handler to the script\nfunction handleScriptError(script, callback) {\n  const onScriptError = (e) => {\n    // reject the promise and remove this event listener\n    callback(e.error || new Error(`There was an error attempting to load ${script.src}`));\n    // remove this event listener\n    script.removeEventListener('error', onScriptError, false);\n  };\n  script.addEventListener('error', onScriptError, false);\n  return onScriptError;\n}\n\n// interfaces\nexport interface ILoadScriptOptions {\n  url?: string;\n  css?: string;\n  requirejsConfig?: { [propName: string]: any };\n}\n\n// allow consuming libraries to provide their own Promise implementations\nexport const utils = {\n  Promise: isBrowser ? window['Promise'] : undefined\n};\n\n// get the script injected by this library\nexport function getScript() {\n  return document.querySelector('script[data-esri-loader]') as HTMLScriptElement;\n}\n// has ArcGIS API been loaded on the page yet?\nexport function isLoaded() {\n  const globalRequire = window['require'];\n  // .on() ensures that it's Dojo's AMD loader\n  return globalRequire && window['requirejs'];\n}\n\n// load the ArcGIS API on the page\nexport function loadScript(options: ILoadScriptOptions = {}): Promise<HTMLScriptElement> {\n  // default options\n  if (!options.url) {\n    options.url = DEFAULT_URL;\n  }\n\n  return new utils.Promise((resolve, reject) => {\n    let script = getScript();\n    if (script) {\n      // the API is already loaded or in the process of loading...\n      // NOTE: have to test against scr attribute value, not script.src\n      // b/c the latter will return the full url for relative paths\n      const src = script.getAttribute('src');\n      if (src !== options.url) {\n        // potentially trying to load a different version of the API\n        reject(new Error(`The ArcGIS API for JavaScript is already loaded (${src}).`));\n      } else {\n        if (isLoaded()) {\n          // the script has already successfully loaded\n          resolve(script);\n        } else {\n          // wait for the script to load and then resolve\n          handleScriptLoad(script, resolve, reject);\n        }\n      }\n    } else {\n      if (isLoaded()) {\n        // the API has been loaded by some other means\n        // potentially trying to load a different version of the API\n        reject(new Error(`The ArcGIS API for JavaScript is already loaded.`));\n      } else {\n        // this is the first time attempting to load the API\n        if (options.css) {\n          // load the css before loading the script\n          loadCss(options.css);\n        }\n        if (options.requirejsConfig) {\n          // set dojo configuration parameters before loading the script\n          window['require'].config(options.requirejsConfig);\n        }\n        // create a script object whose source points to the API\n        script = createScript(options.url);\n        _currentUrl = options.url;\n        // once the script is loaded...\n        handleScriptLoad(script, () => {\n          // update the status of the script\n          script.setAttribute('data-esri-loader', 'loaded');\n          // return the script\n          resolve(script);\n        }, reject);\n        // load the script\n        document.body.appendChild(script);\n      }\n    }\n  });\n}\n\n// wrap \nfunction requireModules(modules: string[]): Promise<any[]> {\n  return new utils.Promise((resolve, reject) => {\n      // If something goes wrong loading the esri/dojo scripts, reject with the error.\n      if(window[\"activeRequireFunction\"] == null){\n          reject(\"esriLoader.setRequireJSConfig() has not been called: \" + \n                 \"You MUST call this function before using esriLoader\");\n      } else {\n          window[\"activeRequireFunction\"]([\"require\"], function(require){\n            require(modules, (...args) => {\n            // Resolve with the parameters from dojo require as an array.\n            resolve(args);\n           },\n               reject);\n            });\n        }\n  });\n}\n\n// returns a promise that resolves with an array of the required modules\n// also will attempt to lazy load the ArcGIS API if it has not already been loaded\nexport function loadModules(modules: string[], loadScriptOptions: ILoadScriptOptions = {}): Promise<any[]> {\n    /* if (!isLoaded()) {\n    // script is not yet loaded\n    if (!loadScriptOptions.url && _currentUrl) {\n      // alredy in the process of loading, so default to the same url\n      loadScriptOptions.url = _currentUrl;\n    }\n    // attept to load the script then load the modules\n    return loadScript(loadScriptOptions).then(() => requireModules(modules));\n  } else {*/\n    // script is already loaded, just load the modules\n    return requireModules(modules);\n    //  }\n}\n\nexport function setRequireJSConfig(config){\n    console.log(\"Setting requirejs-esri-loader's config:\");\n    console.log(config);\n    window[\"activeRequireFunction\"] = window[\"require\"].config(config);\n}\n\n// TODO: import/export getCss too?\n//export { loadCss } from './utils/css';\n\n// NOTE: rollup ignores the default export\n// and builds the UMD namespace out of named exports\n// so this is only needed so that consumers of the ESM build\n// can do esriLoader.loadModules(), etc\n// TODO: remove this next breaking change?\nexport default {\n  setRequireJSConfig,\n  getScript,\n  isLoaded,\n  loadModules,\n  loadScript,\n  loadCss,\n  // TODO: export getCss too?\n  utils\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.esriLoader = global.esriLoader || {})));\n}(this, (function (exports) { 'use strict';\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nvar DEFAULT_VERSION = '4.12';\nfunction parseVersion(version) {\n    var match = version && version.match(/^(\\d)\\.(\\d+)/);\n    return match && {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10)\n    };\n}\n/**\n * Get the CDN url for a given version\n *\n * @param version Ex: '4.12' or '3.29'. Defaults to the latest 4.x version.\n */\nfunction getCdnUrl(version) {\n    if (version === void 0) { version = DEFAULT_VERSION; }\n    return \"https://js.arcgis.com/\" + version + \"/\";\n}\n/**\n * Get the CDN url for a the CSS for a given version and/or theme\n *\n * @param version Ex: '4.12' or '3.29'. Defaults to the latest 4.x version.\n */\nfunction getCdnCssUrl(version) {\n    if (version === void 0) { version = DEFAULT_VERSION; }\n    var baseUrl = getCdnUrl(version);\n    var parsedVersion = parseVersion(version);\n    if (parsedVersion.major === 3) {\n        // NOTE: at 3.11 the CSS moved from the /js folder to the root\n        var path = parsedVersion.minor <= 10 ? 'js/' : '';\n        return \"\" + baseUrl + path + \"esri/css/esri.css\";\n    }\n    else {\n        // assume 4.x\n        return baseUrl + \"esri/css/main.css\";\n    }\n}\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nfunction createStylesheetLink(href) {\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = href;\n    return link;\n}\nfunction insertLink(link, before) {\n    if (before) {\n        // the link should be inserted before a specific node\n        var beforeNode = document.querySelector(before);\n        beforeNode.parentNode.insertBefore(link, beforeNode);\n    }\n    else {\n        // append the link to then end of the head tag\n        document.head.appendChild(link);\n    }\n}\n// check if the css url has been injected or added manually\nfunction getCss(url) {\n    return document.querySelector(\"link[href*=\\\"\" + url + \"\\\"]\");\n}\nfunction getCssUrl(urlOrVersion) {\n    return !urlOrVersion || parseVersion(urlOrVersion)\n        // if it's a valid version string return the CDN URL\n        ? getCdnCssUrl(urlOrVersion)\n        // otherwise assume it's a URL and return that\n        : urlOrVersion;\n}\n// lazy load the CSS needed for the ArcGIS API\nfunction loadCss(urlOrVersion, before) {\n    var url = getCssUrl(urlOrVersion);\n    var link = getCss(url);\n    if (!link) {\n        // create & load the css link\n        link = createStylesheetLink(url);\n        insertLink(link, before);\n    }\n    return link;\n}\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nvar isBrowser = typeof window !== 'undefined';\n// allow consuming libraries to provide their own Promise implementations\nvar utils = {\n    Promise: isBrowser ? window['Promise'] : undefined\n};\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nfunction createScript(url) {\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.setAttribute('data-esri-loader', 'loading');\n    return script;\n}\n// add a one-time load handler to script\n// and optionally add a one time error handler as well\nfunction handleScriptLoad(script, callback, errback) {\n    var onScriptError;\n    if (errback) {\n        // set up an error handler as well\n        onScriptError = handleScriptError(script, errback);\n    }\n    var onScriptLoad = function () {\n        // pass the script to the callback\n        callback(script);\n        // remove this event listener\n        script.removeEventListener('load', onScriptLoad, false);\n        if (onScriptError) {\n            // remove the error listener as well\n            script.removeEventListener('error', onScriptError, false);\n        }\n    };\n    script.addEventListener('load', onScriptLoad, false);\n}\n// add a one-time error handler to the script\nfunction handleScriptError(script, callback) {\n    var onScriptError = function (e) {\n        // reject the promise and remove this event listener\n        callback(e.error || new Error(\"There was an error attempting to load \" + script.src));\n        // remove this event listener\n        script.removeEventListener('error', onScriptError, false);\n    };\n    script.addEventListener('error', onScriptError, false);\n    return onScriptError;\n}\n// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nfunction isLoaded() {\n    var globalRequire = window['require'];\n    // .on() ensures that it's Dojo's AMD loader\n    return globalRequire && globalRequire.on;\n}\n// load the ArcGIS API on the page\nfunction loadScript(options) {\n    if (options === void 0) { options = {}; }\n    // URL to load\n    var version = options.version;\n    var url = options.url || getCdnUrl(version);\n    return new utils.Promise(function (resolve, reject) {\n        var script = getScript();\n        if (script) {\n            // the API is already loaded or in the process of loading...\n            // NOTE: have to test against scr attribute value, not script.src\n            // b/c the latter will return the full url for relative paths\n            var src = script.getAttribute('src');\n            if (src !== url) {\n                // potentially trying to load a different version of the API\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded (\" + src + \").\"));\n            }\n            else {\n                if (isLoaded()) {\n                    // the script has already successfully loaded\n                    resolve(script);\n                }\n                else {\n                    // wait for the script to load and then resolve\n                    handleScriptLoad(script, resolve, reject);\n                }\n            }\n        }\n        else {\n            if (isLoaded()) {\n                // the API has been loaded by some other means\n                // potentially trying to load a different version of the API\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded.\"));\n            }\n            else {\n                // this is the first time attempting to load the API\n                var css = options.css;\n                if (css) {\n                    var useVersion = css === true;\n                    // load the css before loading the script\n                    loadCss(useVersion ? version : css, options.insertCssBefore);\n                }\n                if (options.dojoConfig) {\n                    // set dojo configuration parameters before loading the script\n                    window['dojoConfig'] = options.dojoConfig;\n                }\n                // create a script object whose source points to the API\n                script = createScript(url);\n                // _currentUrl = url;\n                // once the script is loaded...\n                handleScriptLoad(script, function () {\n                    // update the status of the script\n                    script.setAttribute('data-esri-loader', 'loaded');\n                    // return the script\n                    resolve(script);\n                }, reject);\n                // load the script\n                document.body.appendChild(script);\n            }\n        }\n    });\n}\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n// wrap Dojo's require() in a promise\nfunction requireModules(modules) {\n    return new utils.Promise(function (resolve, reject) {\n        // If something goes wrong loading the esri/dojo scripts, reject with the error.\n        var errorHandler = window['require'].on('error', reject);\n        window['require'](modules, function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // remove error handler\n            errorHandler.remove();\n            // Resolve with the parameters from dojo require as an array.\n            resolve(args);\n        });\n    });\n}\n// returns a promise that resolves with an array of the required modules\n// also will attempt to lazy load the ArcGIS API if it has not already been loaded\nfunction loadModules(modules, loadScriptOptions) {\n    if (loadScriptOptions === void 0) { loadScriptOptions = {}; }\n    if (!isLoaded()) {\n        // script is not yet loaded, is it in the process of loading?\n        var script = getScript();\n        var src = script && script.getAttribute('src');\n        if (!loadScriptOptions.url && src) {\n            // script is still loading and user did not specify a URL\n            // in this case we want to default to the URL that's being loaded\n            // instead of defaulting to the latest 4.x URL\n            loadScriptOptions.url = src;\n        }\n        // attempt to load the script then load the modules\n        return loadScript(loadScriptOptions).then(function () { return requireModules(modules); });\n    }\n    else {\n        // script is already loaded, just load the modules\n        return requireModules(modules);\n    }\n}\n\n/*\n  Copyright (c) 2017 Esri\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n// re-export the functions that are part of the public API\n// NOTE: rollup ignores the default export\n// and builds the UMD namespace out of the above named exports\n// so this is only needed so that consumers of the ESM build\n// can do esriLoader.loadModules(), etc\n// TODO: remove this next breaking change\nvar esriLoader = {\n    getScript: getScript,\n    isLoaded: isLoaded,\n    loadModules: loadModules,\n    loadScript: loadScript,\n    loadCss: loadCss,\n    utils: utils\n};\n\nexports.getScript = getScript;\nexports.isLoaded = isLoaded;\nexports.loadModules = loadModules;\nexports.loadScript = loadScript;\nexports.loadCss = loadCss;\nexports.utils = utils;\nexports['default'] = esriLoader;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=esri-loader.js.map\n","var config = require(\"./common\");\nvar configureCdn = require(\"./configure-cdn\");\n\n// This logic constructs the base URL where the nbextensions widgets are stored.\n// This is located at http://<host>:<port>/nbextensions/arcgis/ for any jupyter\n// notebook server. When you are accessing notebooks through this server \n// directly, the base URL should be \"/nbextensions/arcgis/\". When accessing a\n// notebook through ArcGIS Hosted Notebooks, the jupyter server is accessed\n// indirectly, so extra steps are needed. A notebook is at a URL like this:\n// https://<host>:<port>/<webadaptor>/notebooks/<32_char_uuid>/notebooks/file.ipynb\n// for an enterprise setup. An AGOL setup has a URL like this:\n// https://<host>:<port>/<32_char_uuid>/notebooks/file.ipynb\n// For both of the AGOL/enterprise use cases, the nbextensions location is \n// located AFTER the <32_char_uuid> hexadecimal string.\n// (ex. https://<host>:<port>/<32_char_uuid>/nbextensions/)\n\nvar jupyterBase = \"/\";\nif(/\\/[0-9A-Fa-f]{32}\\/notebooks\\//.test(location.pathname)){\n    // We are in a hosted notebooks environment\n    try{\n        jupyterBase = location.pathname.match(\n            /.*\\/[0-9A-Fa-f]{32}\\/(?=notebooks\\/)/)[0];}\n    catch (e){}\n}\nvar nbextensionPath = jupyterBase + \"nbextensions/arcgis/\";\nconsole.log(\"nbextension path = \" + nbextensionPath);\n\n// end section\n// end section\n\nconfig.JupyterTarget = \"notebook\"; \nconfig.BaseRequireJSConfig = {\n    map : {\n        \"*\" : {\n            \"arcgis-map-ipywidget\": nbextensionPath + \"arcgis-map-ipywidget.js\",\n            \"legacy-mapview\": nbextensionPath + \"legacy-mapview.js\"\n        },\n    },\n    config : {\n            has: {\n              \"esri-featurelayer-webgl\": 1\n            },\n\n            geotext: {\n\n            useXhr: function(url) {\n                // Allow cross domain XHR requests:\n                // We will route them through a proxy in onXhr below.\n                // https://github.com/requirejs/text/blob/master/text.js#L129\n\n                return true;\n            },\n\n            // In IE 9, text plugin fails even before onXhr is called:\n            // It fails right when calling xhr.open:\n            // https://github.com/requirejs/text/blob/master/text.js#L267\n            // - This is different from other browsers which appear to fail\n            // much later, allowing us a chance to append proxy below.\n            // -- Probably because IE 9 does not support CORS as opposed to\n            // other modern browsers that have CORS support.\n\n            // ESRI modification: let's take over xhr.open below\n            openXhr: false,\n\n            onXhr: function(xhr, url) {\n                // Route cross domain XHR through a proxy if required\n                var hasCors = (\n                typeof XMLHttpRequest !== \"undefined\"\n                && (\"withCredentials\" in (new XMLHttpRequest()))\n                );\n\n                xhr.open(\n                \"GET\",\n                hasCors ? url : (proxyUrl + \"?\" + url),\n                true\n                );\n            }\n        }\n    }\n};\nconfigureCdn(config, config.CdnUrl);\n\nmodule.exports = config;\n","var CdnUrl = \"//js.arcgis.com/4.14/\";\n\nvar CdnMainCssUrl = \"https:\" + CdnUrl + \"esri/css/main.css\";\n\nvar EsriLoaderOptions = {\n    url: CdnUrl,\n    dojoConfig: {\n        has: {\n            \"esri-featurelayer-webgl\": 1\n        }\n    }\n}\n\nvar minJSAPIVersion = \"4.14\";\n\nvar config = {\n    CdnUrl,\n    CdnMainCssUrl,\n    EsriLoaderOptions,\n    minJSAPIVersion\n};\n\nmodule.exports = config;\n","var configureCDN = function(config, cdn){\n    ///Takes in an existing config, updates the mainCDN and fallbackCDN for\n    ///Jupyter notebook configuration (Jupyterlab configuration just uses\n    ///the main CDNUrl defined in the 'esriLoaderOptions' var of the config\n    config.CdnUrl = cdn;\n    config.EsriLoaderOptions.url = config.CdnUrl\n    if (config.JupyterTarget === \"notebook\"){\n        config.BaseRequireJSConfig.packages = \n           [{ name: \"esri\", location: config.CdnUrl + \"esri\" },\n            { name: \"dojo\", location: config.CdnUrl + \"dojo\" },\n            { name: \"dojox\", location: config.CdnUrl + \"dojox\" },\n            { name: \"dijit\", location: config.CdnUrl + \"dijit\" },\n            { name: \"dstore\", location: config.CdnUrl + \"dstore\" },\n            { name: \"moment\", location: config.CdnUrl + \"moment\" },\n            { name: \"@dojo\", location: config.CdnUrl + \"@dojo\" },\n            {\n              name: \"cldrjs\",\n              location: config.CdnUrl + \"cldrjs\",\n              main: \"dist/cldr\"\n            },\n            {\n              name: \"globalize\",\n              location: config.CdnUrl + \"globalize\",\n              main: \"dist/globalize\"\n            },\n            {\n              name: \"maquette\",\n              location: config.CdnUrl + \"maquette\",\n              main: \"dist/maquette.umd\"\n            },\n            {\n              name: \"maquette-css-transitions\",\n              location: config.CdnUrl + \"maquette-css-transitions\",\n              main: \"dist/maquette-css-transitions.umd\"\n            },\n            {\n              name: \"maquette-jsx\",\n              location: config.CdnUrl + \"maquette-jsx\",\n              main: \"dist/maquette-jsx.umd\"\n            },\n            { name: \"tslib\", location: config.CdnUrl + \"tslib\", main: \"tslib\" }\n            ]\n        if (window.require) {\n            window.customRequire = window.require.config(config.BaseRequireJSConfig);\n        }\n    } else if (config.JupyterTarget === \"lab\"){\n        //delete any existing script tags in a jupyterlab setting\n        //TODO: Find a more elegant solution to removing the original script element\n        var scriptEl = document.querySelector('script[data-esri-loader]');\n        if(scriptEl != null){\n            scriptEl.parentNode.removeChild(scriptEl);\n        }\n    }\n}\n\nmodule.exports = configureCDN;\n"],"sourceRoot":""}